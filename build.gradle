plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.minecraft_version + '-' + project.mod_version
group = project.maven_group

repositories {
	maven {
		name "REI"
		url "https://maven.shedaniel.me/"
	}
	maven {
		name "Architectury"
		url "https://maven.architectury.dev/"
	}
	maven {
		name "EnergyAPI"
		url "https://maven.fabricmc.net/teamreborn"
	}
	mavenCentral()
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	include modApi("teamreborn:energy:${project.energy_api_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}"
	modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE")
}

loom {
	runs {
		datagenClient {
			inherit client
			name "Datagen"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
			vmArg "-Dfabric-api.datagen.strict-validation"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {

	}
}
